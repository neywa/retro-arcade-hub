# retro-arcade-hub/kubernetes/game-tetris/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: retro-arcade-tetris-game
  labels:
    app: retro-arcade-hub
    component: game-tetris
spec:
  replicas: 1 # Start with 1 replica for simplicity
  selector:
    matchLabels:
      app: retro-arcade-hub
      component: game-tetris
  template:
    metadata:
      labels:
        app: retro-arcade-hub
        component: game-tetris
    spec:
      containers:
        - name: tetris-game-app
          # Replace <your_quay_username> with your actual Quay.io username
          image: quay.io/rhn_support_rbobek/retro-arcade-game-tetris:1.0.12
          ports:
            - containerPort: 8080 # The port your Flask app listens on (from app.py)
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          # Liveness probe: checks if the application is still running and responsive
          livenessProbe:
            httpGet:
              path: /healthz # Our health check endpoint in app.py
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          # Readiness probe: checks if the application is ready to accept traffic
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 1
